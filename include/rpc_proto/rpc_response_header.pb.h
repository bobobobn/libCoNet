// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rpc_response_header.proto

#ifndef PROTOBUF_rpc_5fresponse_5fheader_2eproto__INCLUDED
#define PROTOBUF_rpc_5fresponse_5fheader_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
class RpcResponseHeader;
class RpcResponseHeaderDefaultTypeInternal;
extern RpcResponseHeaderDefaultTypeInternal _RpcResponseHeader_default_instance_;

namespace protobuf_rpc_5fresponse_5fheader_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_rpc_5fresponse_5fheader_2eproto

enum ErrorCode {
  SUCCESS = 0,
  UNKNOWN_ERROR = 1,
  INVALID_REQUEST = 2,
  AUTH_FAILED = 3,
  PERMISSION_DENIED = 4,
  ErrorCode_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ErrorCode_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ErrorCode_IsValid(int value);
const ErrorCode ErrorCode_MIN = SUCCESS;
const ErrorCode ErrorCode_MAX = PERMISSION_DENIED;
const int ErrorCode_ARRAYSIZE = ErrorCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* ErrorCode_descriptor();
inline const ::std::string& ErrorCode_Name(ErrorCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    ErrorCode_descriptor(), value);
}
inline bool ErrorCode_Parse(
    const ::std::string& name, ErrorCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ErrorCode>(
    ErrorCode_descriptor(), name, value);
}
// ===================================================================

class RpcResponseHeader : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RpcResponseHeader) */ {
 public:
  RpcResponseHeader();
  virtual ~RpcResponseHeader();

  RpcResponseHeader(const RpcResponseHeader& from);

  inline RpcResponseHeader& operator=(const RpcResponseHeader& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RpcResponseHeader& default_instance();

  static inline const RpcResponseHeader* internal_default_instance() {
    return reinterpret_cast<const RpcResponseHeader*>(
               &_RpcResponseHeader_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(RpcResponseHeader* other);

  // implements Message ----------------------------------------------

  inline RpcResponseHeader* New() const PROTOBUF_FINAL { return New(NULL); }

  RpcResponseHeader* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RpcResponseHeader& from);
  void MergeFrom(const RpcResponseHeader& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RpcResponseHeader* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string message = 2;
  void clear_message();
  static const int kMessageFieldNumber = 2;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // .ErrorCode status = 1;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::ErrorCode status() const;
  void set_status(::ErrorCode value);

  // int32 args_size = 3;
  void clear_args_size();
  static const int kArgsSizeFieldNumber = 3;
  ::google::protobuf::int32 args_size() const;
  void set_args_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:RpcResponseHeader)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  int status_;
  ::google::protobuf::int32 args_size_;
  mutable int _cached_size_;
  friend struct protobuf_rpc_5fresponse_5fheader_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// RpcResponseHeader

// .ErrorCode status = 1;
inline void RpcResponseHeader::clear_status() {
  status_ = 0;
}
inline ::ErrorCode RpcResponseHeader::status() const {
  // @@protoc_insertion_point(field_get:RpcResponseHeader.status)
  return static_cast< ::ErrorCode >(status_);
}
inline void RpcResponseHeader::set_status(::ErrorCode value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:RpcResponseHeader.status)
}

// string message = 2;
inline void RpcResponseHeader::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RpcResponseHeader::message() const {
  // @@protoc_insertion_point(field_get:RpcResponseHeader.message)
  return message_.GetNoArena();
}
inline void RpcResponseHeader::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RpcResponseHeader.message)
}
#if LANG_CXX11
inline void RpcResponseHeader::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RpcResponseHeader.message)
}
#endif
inline void RpcResponseHeader::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RpcResponseHeader.message)
}
inline void RpcResponseHeader::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RpcResponseHeader.message)
}
inline ::std::string* RpcResponseHeader::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:RpcResponseHeader.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RpcResponseHeader::release_message() {
  // @@protoc_insertion_point(field_release:RpcResponseHeader.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RpcResponseHeader::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:RpcResponseHeader.message)
}

// int32 args_size = 3;
inline void RpcResponseHeader::clear_args_size() {
  args_size_ = 0;
}
inline ::google::protobuf::int32 RpcResponseHeader::args_size() const {
  // @@protoc_insertion_point(field_get:RpcResponseHeader.args_size)
  return args_size_;
}
inline void RpcResponseHeader::set_args_size(::google::protobuf::int32 value) {
  
  args_size_ = value;
  // @@protoc_insertion_point(field_set:RpcResponseHeader.args_size)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::ErrorCode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ErrorCode>() {
  return ::ErrorCode_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_rpc_5fresponse_5fheader_2eproto__INCLUDED
